<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Jadwal extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        if ($this->session->userdata['level'] != 1) {
            redirect('auth/logout');
        }
        $this->load->model('Jadwal_model');
    }

    /*
     * Listing of jadwal
     */
    function index()
    {
        $data['jadwal'] = $this->Jadwal_model->all_jadwal_join();

        $data['_view'] = 'jadwal/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new jadwal
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('id_profile', 'Id Profile', 'required');
        $this->form_validation->set_rules('id_user', 'Id User', 'required');
        $this->form_validation->set_rules('tanggal', 'Tanggal', 'required');

        if ($this->form_validation->run()) {
            $cek = $this->Jadwal_model->seleksi($this->input->post('id_profile'), $this->input->post('id_user'), $this->input->post('tanggal'));

            if ($this->db->get_where('jadwal', ['id_profile' => $this->input->post('id_profile'), 'tanggal' => $this->input->post('tanggal')])->row_array()) {
                $this->session->set_flashdata('message', '<div class="alert alert-danger" role="alert">Data Profile telah ada   </div>');
                redirect('jadwal/index');
                die;
            }
            if ($this->db->get_where('jadwal', ['id_user' => $this->input->post('id_user'), 'tanggal' => $this->input->post('tanggal')])->row_array()) {
                $this->session->set_flashdata('message', '<div class="alert alert-danger" role="alert">Data Tanggal telah ada   </div>');
                redirect('jadwal/index');
                die;
            }
            if ($cek == null) {
                $params = array(
                    'id_profile' => $this->input->post('id_profile'),
                    'id_user' => $this->input->post('id_user'),
                    'status' => 1,
                    'tanggal' => $this->input->post('tanggal'),
                );
                $this->session->set_flashdata('message', '<div class="alert alert-success" role="alert">Anda Berhasil Membuat Data Jadwal Baru</div>');
                $jadwal_id = $this->Jadwal_model->add_jadwal($params);
                redirect('jadwal/index');
            } else {
                $this->session->set_flashdata('message', '<div class="alert alert-danger" role="alert">Data User telah ada   </div>');
                redirect('jadwal/index');
                die;
            }
        } else {
            $this->load->model('Profile_model');
            $data['all_profile'] = $this->Profile_model->get_all_profile();

            $this->load->model('User_model');
            $data['all_user'] = $this->User_model->get_all_user();

            $data['_view'] = 'jadwal/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a jadwal
     */
    function edit($id_jadwal)
    {
        // check if the jadwal exists before trying to edit it
        $data['jadwal'] = $this->Jadwal_model->get_jadwal($id_jadwal);

        if (isset($data['jadwal']['id_jadwal'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('id_profile', 'Id Profile', 'required');
            $this->form_validation->set_rules('id_user', 'Id User', 'required');
            $this->form_validation->set_rules('tanggal', 'Tanggal', 'required');
            if ($this->form_validation->run()) {
                $params = array(
                    'id_profile' => $this->input->post('id_profile'),
                    'id_user' => $this->input->post('id_user'),
                    'status' => 1,
                    'tanggal' => $this->input->post('tanggal'),
                );
                if ($this->db->get_where('jadwal', ['id_profile' => $this->input->post('id_profile'), 'tanggal' => $this->input->post('tanggal')])->row_array()) {
                $this->session->set_flashdata('message', '<div class="alert alert-danger" role="alert">Data Profile telah ada   </div>');
                redirect('jadwal/index');
                die;
                }

                $this->Jadwal_model->update_jadwal($id_jadwal, $params);
                redirect('jadwal/index');
            } else {
                $this->load->model('Profile_model');
                $data['all_profile'] = $this->Profile_model->get_all_profile();

                $this->load->model('User_model');
                $data['all_user'] = $this->User_model->get_all_user();

                $data['_view'] = 'jadwal/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The jadwal you are trying to edit does not exist.');
    }

    /*
     * Deleting jadwal
     */
    function remove($id_jadwal)
    {
        $jadwal = $this->Jadwal_model->get_jadwal($id_jadwal);

        // check if the jadwal exists before trying to delete it
        if (isset($jadwal['id_jadwal'])) {
            $this->Jadwal_model->delete_jadwal($id_jadwal);
            redirect('jadwal/index');
        } else
            show_error('The jadwal you are trying to delete does not exist.');
    }
}
